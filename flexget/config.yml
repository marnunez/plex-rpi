variables: variables.yml

### Templates

templates:
  anchors:
    _transmission: &transmission
      host: transmission
      port: 9091
      username: '{? transmission.username ?}'
      password: '{? transmission.password ?}'

    _trakt_credentials: &trakt_credentials
      username: '{? trakt.username ?}'
      account: '{? trakt.account ?}'

    _addic7ed_credentials: &addic7ed_credentials
      username: '{? addic7ed.username ?}'
      password: '{? addic7ed.password ?}'

    _opensubtitles: &opensubtitles_credentials
      username: '{? opensubtitles.username ?}'
      password: '{? opensubtitles.password ?}'

    _movie_lookup: &movie_lookup
      imdb_lookup: yes
      tmdb_lookup: yes

    _tv_lookup: &tv_lookup
      thetvdb_lookup: yes
      trakt_lookup:
        <<: *trakt_credentials

  trakt_tv_list: &trakt_tv_list
    trakt_list:
      <<: *trakt_credentials
      list: '{? trakt.tv_list ?}'
      type: shows

  trakt_movie_list: &trakt_movie_list
    trakt_list:
      <<: *trakt_credentials
      list: '{? trakt.movie_list ?}'
      type: movies

  global-settings:
    transmission:
      <<: *transmission
    free_space:
      path: /storage
      space: 20000
    pathscrub: windows
    include: reject.yml
    sort_by:
      field: quality
      reverse: yes
    trakt_lookup:
      <<: *trakt_credentials
    if:
      - trakt_watched: reject

  tv-settings:
    <<: *tv_lookup
    content_size:
      max: 10000
      min: 500
    configure_series:
      from:
        <<: *trakt_tv_list
      settings:
        exact: no
        quality: 1080p hdtv+
        propers: 2 days
        identified_by: ep

  movie-settings:
    <<: *movie_lookup
    proper_movies: no
    content_size:
      min: 8000
      max: 80000
      strict: no
    quality: 1080p+ webdl+
    list_match:
      from:
        - movie_list: pelis

tasks:

  search-tv:
    priority: 10
    template:
      - global-settings
      - tv-settings
    discover:
      what:
        - next_series_episodes: yes
      from:
        - search_rss:
            url: https://eztv.ag/ezrss.xml
            other_fields: ['torrent:magnetURI']
            link: 'torrent:magnetURI'
            escape: yes
        - rarbg:
            category:
              - x264 1080p
        - piratebay:
            category: video
            sort_by: leechers
            url: https://piratebaymirror.eu
      interval: 3 hours

  search-movies:
    priority: 20
    template:
      - global-settings
      - movie-settings
    discover:
      what:
        - movie_list: pelis
      from:
        - rarbg:
            category:
              - x264 1080p
        - piratebay:
            category: video
            sort_by: leechers
            url: https://piratebaymirror.eu
      interval: 6 hours

  get-subtitles:
    priority: 1
    filesystem:
      path:
        - /downloads/complete         # unix
      regexp: '.*\.(avi|mkv|mp4)$'  # only include filenames with these extensions
      recursive: yes
    accept_all: yes
    seen: local                     # seen shouldn't interfer with anything outside this subtitles task
    subliminal:
      languages:
        - eng
        - spa
      alternatives:
        - fre
        - ger
      exact_match: yes
      #only use the following providers
      providers: [opensubtitles,argenteam]
      single: no
      hearing_impaired: yes
      authentication:               #consider using the variables plugin
        opensubtitles:
          <<: *opensubtitles_credentials
  trakt-update-movie-queue:
    priority: 10
    <<: *movie_lookup
    template: trakt_movie_list
    accept_all: yes
    list_add:
      - movie_list: "{? trakt.movie_list ?}"
    no_entries_ok: yes
    seen: local

  trakt-fill-tv-list:
    priority: 20
    trakt_list:
      <<: *trakt_credentials
      list: "{? trakt.tv_list ?}"
      type: episodes
      strip_dates: yes
    accept_all: yes
    set_series_begin: yes
    list_remove:
      - trakt_list:
          <<: *trakt_credentials
          list: "{? trakt.tv_list ?}"
          type: episodes
    list_add:
      - trakt_list:
          <<: *trakt_credentials
          list: "{? trakt.tv_list ?}"
          type: shows
    no_entries_ok: yes
    seen: local

  trakt-cleanup-tv-list:
    priority: 30
    template: trakt_tv_list
    <<: *tv_lookup
    disable: seen
    if:
      - trakt_series_status in ['ended', 'canceled']: accept
    list_remove:
      - <<: *trakt_tv_list
    no_entries_ok: yes

  trakt-cleanup-movie-list:
    priority: 30
    trakt_lookup:
      <<: *trakt_credentials
    template: trakt_movie_list
    disable: seen
    if:
      - trakt_collected: accept
    list_remove:
      - <<: *trakt_movie_list
    no_entries_ok: yes

  cleanup-torrents:
    priority: 40
    from_transmission:
      <<: *transmission
    disable: [seen, seen_info_hash]
    if:
      - transmission_progress == 100: accept
      - "transmission_ratio < 1.0 and transmission_date_done > now - timedelta(days=15)": reject
    transmission:
      <<: *transmission
      action: purge
    no_entries_ok: yes

  sort-tv:
    priority: 2
    no_entries_ok: yes
    parsing:
      series: guessit
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    accept_all: yes
    thetvdb_lookup: yes
    require_field: series_name
    all_series:
      parse_only: yes
    exec:
      auto_escape: yes
      on_output:
        for_entries: |
          if mediainfo "{{ location }}" | grep EAC3; then
            mkdir -p "/storage/Series/{{ tvdb_series_name }}/Season {{ series_season }}" && ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/storage/Series/{{ tvdb_series_name }}/Season {{ series_season }}/{{ tvdb_series_name }} - {{ series_id }}{{ location | pathext }}"
          else
            mkdir -p "/storage/Series/{{ tvdb_series_name }}/Season {{ series_season }}" && cp "{{ location }}" "/storage/Series/{{ tvdb_series_name }}/Season {{ series_season }}/{{ tvdb_series_name }} - {{ series_id }}{{ location | pathext }}"
          fi
  sort-movies:
    priority: 2
    no_entries_ok: yes
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    accept_all: yes
    require_field: movie_name
    imdb_lookup: yes
    exec:
      auto_escape: yes
      on_output:
       for_entries: |
         if mediainfo "{{ location }}" | grep EAC3; then
           mkdir -p "/storage/Películas/{{ movie_name }} ({{ movie_year }})" && ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/storage/Películas/{{ movie_name }} ({{ movie_year }})/{{ movie_name }} ({{ movie_year }}){{ location | pathext }}"
         else
           mkdir -p "/storage/Películas/{{ movie_name }} ({{ movie_year }})" && cp "{{ location }}" "/storage/Películas/{{ movie_name }} ({{ movie_year }})/{{ movie_name }} ({{ movie_year }}){{ location | pathext }}"
         fi

schedules:
  - tasks: ['search-*','sort-*']
    interval:
      hours: 6
  - tasks: ['trakt-*', 'cleanup-*']
    interval:
      hours: 12
